#! /usr/bin/env python3

import json
import urllib.request

TEST_VECTORS_URL = "https://github.com/BLAKE3-team/BLAKE3/raw/master/test_vectors/test_vectors.json"


def main():
    contents = urllib.request.urlopen(TEST_VECTORS_URL).read()
    test_vectors = json.loads(contents)
    print(f"""// this file is generated by {__file__}
package pt.kcry.blake3

import pt.kcry.blake3

import org.scalatest.matchers.should
import org.scalatest.wordspec.AnyWordSpec

class OfficialTestVectorsTest extends AnyWordSpec with should.Matchers {{
  "where inputLen" when {{

    val testVector = new TestVector(
      testKey = "whats the Elvish word for friend",
      testContext = "BLAKE3 2019-12-27 16:29:52 test vectors context"
    )

    val outputLen = 2 * blake3.BLOCK_LEN + 3
""")
    for case in test_vectors["cases"]:
        print(f"""    "{case["input_len"]}" in {{
      testVector.runCase(
        inputLen = {case["input_len"]},
        outputLen = outputLen,
        hash =
          "{case["hash"]}",
        keyedHash =
          "{case["keyed_hash"]}",
        deriveKeyHash =
          "{case["derive_key"]}"
      )
      testVector.runSquareCase({case["input_len"]})
    }}
""")

    print("""  }
}""")



if __name__ == "__main__":
    main()
